{"version":3,"sources":["Components/LeftSidebar.js","Components/RightSidebar.js","App.js","reportWebVitals.js","index.js"],"names":["LeftSidebar","g","SetThings","useState","Fname","setFname","Mname","setMname","Lname","setLname","Feed","setFeed","gen","setGen","className","style","display","color","id","type","onChange","e","target","value","class","name","onClick","undefined","alert","length","document","getElementById","reset","prev","First","Middle","Last","Feedback","feed","a","RightSidebar","Things","dummy","useRef","current","scrollIntoView","behavior","block","map","d","ref","App","things","setthings","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5c454125.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// import {scrolldown} from './Rightsidebar'\r\n\r\nfunction LeftSidebar({ SetThings }) {\r\n  let [Fname, setFname] = useState();\r\n  let [Mname, setMname] = useState();\r\n  let [Lname, setLname] = useState();\r\n  let [Feed, setFeed] = useState();\r\n  var [gen, setGen] = useState();\r\n  var g;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"LeftSide\">\r\n        <p>🔴🟡🟢 </p>{\" \"}\r\n        <b>\r\n          <p style={{ display: \"inline\", color: \"black\" }}>\r\n            Enter Your Feedback\r\n          </p>\r\n        </b>\r\n        <hr />\r\n        <div className=\"LeftSideInner\">\r\n          <form id=\"form1\">\r\n            <lable>\r\n              First Name{\" \"}\r\n              <b>\r\n                <p style={{ display: \"inline\", color: \"red\" }}>*</p>\r\n              </b>{\" \"}\r\n            </lable>\r\n            <br />\r\n\r\n            <input\r\n              type=\"text\"\r\n              onChange={(e) => {\r\n                setFname(e.target.value);\r\n              }}\r\n            />\r\n            <br />\r\n\r\n            <lable>Middle Name</lable>\r\n            <br />\r\n\r\n            <input\r\n              type=\"text\"\r\n              onChange={(e) => {\r\n                setMname(e.target.value);\r\n              }}\r\n            />\r\n            <br />\r\n\r\n            <lable>\r\n              {\" \"}\r\n              Last Name{\" \"}\r\n              <b>\r\n                <p style={{ display: \"inline\", color: \"red\" }}>*</p>\r\n              </b>{\" \"}\r\n            </lable>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              onChange={(e) => {\r\n                setLname(e.target.value);\r\n              }}\r\n            />\r\n            <br />\r\n            <lable>\r\n              Gender{\" \"}\r\n              <b>\r\n                <p style={{ display: \"inline\", color: \"red\" }}>*</p>\r\n              </b>{\" \"}\r\n            </lable>\r\n            <div style={{ display: \"inline\" }}>\r\n              <label class=\"containe\">\r\n                <input\r\n                  id=\"M\"\r\n                  onChange={() => {\r\n                    setGen(\"male\");\r\n                  }}\r\n                  type=\"radio\"\r\n                  name=\"radio\"\r\n                />\r\n                Male\r\n              </label>\r\n              <label class=\"containe\">\r\n                <input\r\n                  id=\"F\"\r\n                  onChange={() => {\r\n                    setGen(\"female\");\r\n                  }}\r\n                  type=\"radio\"\r\n                  name=\"radio\"\r\n                />\r\n                Female\r\n              </label>\r\n            </div>\r\n            <br />\r\n            <br />\r\n\r\n            <lable>\r\n              Feedback{\" \"}\r\n              <b>\r\n                <p style={{ display: \"inline\", color: \"red\" }}>*</p>\r\n              </b>{\" \"}\r\n            </lable>\r\n            <br />\r\n            <textarea\r\n              onChange={(e) => {\r\n                setFeed(e.target.value);\r\n              }}\r\n              className=\"TeAr\"\r\n              style={{}}\r\n              type=\"text\"\r\n            />\r\n            <br />\r\n          </form>\r\n\r\n          <div className=\"Buttons\">\r\n            <button\r\n              class=\"Btn\"\r\n              type=\"submit\"\r\n              onClick={() => {\r\n                if (gen == \"male\") {\r\n                  g = \"👦🏻 𝗠𝗿.  →   \";\r\n                } else if (gen == \"female\") {\r\n                  g = \"👩🏻 𝗠𝘀.  →   \";\r\n                } else {\r\n                  g = \"nope\";\r\n                }\r\n\r\n                if (Mname == undefined) {\r\n                  Mname = \"\";\r\n                }\r\n\r\n                if (Fname == undefined) {\r\n                  alert(\"⭕ Enter First name \");\r\n                } else if (Lname == undefined) {\r\n                  alert(\"⭕ Enter Last name \");\r\n                } else if (Feed == undefined) {\r\n                  alert(\"⭕ Enter your Feedback \");\r\n                } else if (g == \"nope\") {\r\n                  alert(\"⭕ Select Gender \");\r\n                } else if (Fname.length > 40) {\r\n                  alert(\"⭕ Max First name length is  40\");\r\n                } else if (Mname.length > 40) {\r\n                  alert(\"⭕ Max Middle name length is  40\");\r\n                } else if (Lname.length > 40) {\r\n                  alert(\"⭕ Max Last name length is  40\");\r\n                } else {\r\n                  document.getElementById(\"form1\").reset();\r\n\r\n                  SetThings((prev) => {\r\n                    var First = Fname;\r\n                    var Middle = Mname;\r\n                    var Last = Lname;\r\n                    var Feedback = Feed;\r\n\r\n                    setFname(undefined);\r\n                    setMname(undefined);\r\n                    setLname(undefined);\r\n                    setFeed(undefined);\r\n\r\n                    return [\r\n                      ...prev,\r\n                      {\r\n                        name: g + \" \" + First + \" \" + Middle + \" \" + Last,\r\n                        feed: Feedback,\r\n                      },\r\n                    ];\r\n                  });\r\n                }\r\n              }}\r\n            >\r\n              Submit\r\n            </button>\r\n            <p className=\"space\"> </p>\r\n            <button\r\n              class=\"Btn\"\r\n              onClick={() => {\r\n                document.getElementById(\"form1\").reset();\r\n              }}\r\n            >\r\n              Reset\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LeftSidebar;\r\n","import React, { useRef, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ScrollIntoView from \"react-scroll-into-view\";\r\n\r\nvar a = 0;\r\n\r\nfunction RightSidebar({ Things }) {\r\n  const dummy = useRef();\r\n\r\n  if (a >= 2) {\r\n    dummy.current.scrollIntoView({ behavior: \"smooth\", block: \"end\" });\r\n  }\r\n  a++;\r\n\r\n  return (\r\n    <div className=\"RightSide\">\r\n      <p className=\"rightMac\" style={{}}>\r\n        🔴🟡🟢\r\n      </p>\r\n\r\n      <div className=\"Cont\">\r\n        <b>\r\n          <p style={{ display: \"inline\", color: \"black\" }}>Feedbacks</p>\r\n        </b>\r\n        <hr />\r\n        <div className=\"Cont2\" id=\"style-1\">\r\n          {Things.map((d) => {\r\n            return (\r\n              <div className=\"card\" id=\"Card\">\r\n                <p>{d.name}</p>\r\n\r\n                <p className=\"says\">💬 Says → {d.feed}</p>\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          <div className=\"C\" ref={dummy}></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RightSidebar;\r\n","import \"./App.css\";\nimport LeftSidebar from \"./Components/LeftSidebar\";\nimport RightSidebar from \"./Components/RightSidebar\";\nimport { useState } from \"react\";\n\nfunction App() {\n  let [things, setthings] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"main\">\n        <LeftSidebar SetThings={setthings} />\n        <RightSidebar Things={things} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}